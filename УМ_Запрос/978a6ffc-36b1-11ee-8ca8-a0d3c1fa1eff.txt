{
 'Реквизиты': {
  'Наименование': 'Автоматическое создание поступлений ЦДС МАГАС',
  'ТекстОбработки': '	// ПАРАМЕТРЫ ЗАПРОС В БП //
Попытка
	ПараметрыЗапросавБП = Новый Структура;   	
	ПараметрыЗапросавБП.Вставить("Дата", DT_ОбщийМодульОбменаСБП.ОпределитьДатуЗапретаЗагрузки());
	ПараметрыЗапросавБП.Вставить("КодУзла",УМ_ДинамическиеКонстантыПовтИсп.ПолучитьЗначениеДинамическойКонстанты("Глн_КодУзлаОбменаБП"));
    КодЗапроса1С = ПолучитьЗначениеПеременной(Переменные,"КодЗапроса1с"); 
        	
	// ЗАПРОС В БП ГАЛЕН //
        	
    СтруктураЗапроса = Новый Структура("value,params",КодЗапроса1С,ПараметрыЗапросавБП);	
			
	ЗаписьJSON = Новый ЗаписьJSON;ЗаписьJSON.УстановитьСтроку();ЗаписатьJSON(ЗаписьJSON, СтруктураЗапроса);			
	СтрокаТелаЗапроса = ЗаписьJSON.Закрыть();
		
	HTTPЗапрос = Новый HTTPЗапрос(Соединение.АдресЗапроса);     
	HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаТелаЗапроса);
	HTTPОтвет = Соединение.HTTPСоединение.ВызватьHTTPМетод("POST", HTTPЗапрос); 
	РезультатРазбораHTTP = Алгоритм("ПрочитатьОтветСервисаUniversal",HTTPОтвет); 
	Если не РезультатРазбораHTTP.Успешно Тогда 
		ВызватьИсключение РезультатРазбораHTTP.Результат;
	КонецЕсли;

	СтруктураРезультатЗапросаHTTP = ЗначениеИзСтрокиВнутр(РезультатРазбораHTTP.Результат);
	РезультатЧтенияДС = СтруктураРезультатЗапросаHTTP.ТЗ; 
	Если НЕ ЗначениеЗаполнено(РезультатЧтенияДС) Тогда
		ЗаписьЖурналаРегистрации("Автоматический обмен УХ-БП Гален",УровеньЖурналаРегистрации.Информация,,,"Не найдены данные для загрузки");
	КонецЕсли;
    // СНЯТИЕ ОБЪЕКТОВ С РЕГИСТРАЦИИ НА УЗЛЕ //
	СтруктураОповещенийОсозданииДокументов = DT_ОбщийМодульОбменаСБП.НайтиСоздатьДокументыПоступления(РезультатЧтенияДС);
	КодУдаленияРегистрацииОбъектов = ПолучитьЗначениеПеременной(Переменные,"КодУдаленияРегистрацииОбъектов"); 
    СтруктураЗапроса = Новый Структура("value,params",КодУдаленияРегистрацииОбъектов,СтруктураОповещенийОсозданииДокументов.УспешноЗагружены);	
	ЗаписьJSON = Новый ЗаписьJSON;ЗаписьJSON.УстановитьСтроку();ЗаписатьJSON(ЗаписьJSON, СтруктураЗапроса);			
	СтрокаТелаЗапроса = ЗаписьJSON.Закрыть();
		
	HTTPЗапрос = Новый HTTPЗапрос(Соединение.АдресЗапроса);     
	HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаТелаЗапроса);
	HTTPОтвет = Соединение.HTTPСоединение.ВызватьHTTPМетод("POST", HTTPЗапрос); 
	РезультатРазбораHTTP = Алгоритм("ПрочитатьОтветСервисаUniversal",HTTPОтвет); 
	Если не РезультатРазбораHTTP.Успешно Тогда 
		ВызватьИсключение РезультатРазбораHTTP.Результат;
	КонецЕсли;  
	
	// СООБЩЕНИЕ ОБ ОШИБКАХ ПРОВЕДЕНИЯ //
	
	Если ЗначениеЗаполнено(СтруктураОповещенийОсозданииДокументов.ОшибкиПроведения) Тогда
		ТДРезультат = Новый ТабличныйДокумент;
		ТДРезультат.Область(1,1,1,1,).Текст = "Документ"; 
		ТДРезультат.Область(1,2,1,2,).Текст = "ОшибкиПроведения";
		к=2;
		Для Каждого Стр  Из СтруктураОповещенийОсозданииДокументов.ОшибкиПроведения Цикл 
			ТДРезультат.Область(к,1,к,1,).Текст = Стр.Ключ; 
			ТДРезультат.Область(к,2,к,2,).Текст = Стр.Значение;
			к=к+1;
		КонецЦикла;
		
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла("html");
		ТДРезультат.Записать(ИмяВременногоФайла, ТипФайлаТабличногоДокумента.HTML);
		ЧтениеТекста = Новый ЧтениеТекста(ИмяВременногоФайла);
		HTMLТекстОтчета = ЧтениеТекста.Прочитать();
		ЧтениеТекста.Закрыть();
		УдалитьФайлы(ИмяВременногоФайла); 
		ТекстСообщения = HTMLТекстОтчета;
		ТипТекста = ТипТекстаПочтовогоСообщения.HTML; 
		
		ТемаСообщения = "Ошибки проведения документов УХ-БП";
		ПочтаПолучателей = УМ_ДинамическиеКонстантыПовтИсп.ПолучитьЗначениеДинамическойКонстанты("Глн_ПолучателиОповещенийОбменаБП"); 
		ГуидУчетнойЗаписиПочты = "f3af99f8-3757-11ee-8ca8-a0d3c1fa1eff"; //"de7f0fee-f79e-11e9-a889-0242c0a8c005"; 
		Вложения = Новый Массив;	
		Алгоритм("ОтправитьEmail",ЗапросСсылка,ПочтаПолучателей,ТемаСообщения,ТекстСообщения,ТипТекста,ГуидУчетнойЗаписиПочты,Вложения);
	КонецЕсли;
	
Исключение
	ЗаписьЖурналаРегистрации("Автоматический обмен УХ-БП Гален",УровеньЖурналаРегистрации.Ошибка,,,"Не удалось выполнить обмен с базой БП Гален");
КонецПопытки;
	
',
  'Комментарий': ''
 },
 'ТЧ': [
  {
   'Переменные': [
    {
     'Имя': 'КодЗапроса1с',
     'Разделитель': null,
     'ЗначениеСтрока': '

Запрос = Новый Запрос;

//Установка значений параметров
Запрос.УстановитьПараметр("КодУзла",params.КодУзла);
Запрос.УстановитьПараметр("Дата", Дата(params.Дата));

Запрос.Текст = "   ВЫБРАТЬ
|		                  	УникальныйИдентификатор(РеализацияТоваровУслугТовары.Ссылка) КАК РеализацияСсылка,
|		                  	РеализацияТоваровУслугТовары.Ссылка.Номер КАК НомерРеализации,
|		                  	РеализацияТоваровУслугТовары.Ссылка.Дата КАК ДатаРеализации,
|		                  	РеализацияТоваровУслугТовары.Ссылка.Организация.ИНН КАК ОрганизацияИНН,
|		                  	РеализацияТоваровУслугТовары.Ссылка.Организация.КПП КАК ОрганизацияКПП,
|		                  	УникальныйИдентификатор(РеализацияТоваровУслугТовары.Ссылка.Контрагент) КАК Контрагент,
|		                  	РеализацияТоваровУслугТовары.Ссылка.Контрагент.ИНН КАК КонтрагентИНН,
|		                  	РеализацияТоваровУслугТовары.Ссылка.Контрагент.КПП КАК КонтрагентКПП,
|		                  	РеализацияТоваровУслугТовары.Ссылка.ВалютаДокумента.Код КАК ВалютаРеализацииКод,
|		                  	РеализацияТоваровУслугТовары.Ссылка.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
|		                  	РеализацияТоваровУслугТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
|		                  	РеализацияТоваровУслугТовары.Ссылка.СуммаДокумента КАК СуммаДокумента,
|		                  	РеализацияТоваровУслугТовары.Ссылка.ДоговорКонтрагента.Код КАК ДоговорКонтрагентаКод,
|		                  	РеализацияТоваровУслугТовары.Ссылка.ДоговорКонтрагента.Наименование КАК ДоговорКонтрагентаНаименование,
|		                  	РеализацияТоваровУслугТовары.Ссылка.ДоговорКонтрагента.Номер КАК ДоговорКонтрагентаНомер,
|		                  	РеализацияТоваровУслугТовары.Ссылка.ДоговорКонтрагента.Дата КАК ДоговорКонтрагентаДата,
|		                  	РеализацияТоваровУслугТовары.Ссылка.ДоговорКонтрагента.ВидДоговора КАК ДоговорКонтрагентаВидДоговора,
|		                  	РеализацияТоваровУслугТовары.Ссылка.ДоговорКонтрагента.ВалютаВзаиморасчетов.Код КАК ДоговорКонтрагентаВалютаВзаиморасчетовКод,
|		                  	РеализацияТоваровУслугТовары.ЕдиницаИзмерения.Код КАК ТоварыЕдиницаИзмеренияКод,
|		                  	УникальныйИдентификатор(РеализацияТоваровУслугТовары.Номенклатура) КАК ТоварыНоменклатураСсылка,
|		                  	РеализацияТоваровУслугТовары.Номенклатура.Артикул КАК НоменклатураАртикул,
|		                  	РеализацияТоваровУслугТовары.Номенклатура.ВидНоменклатуры КАК НоменклатураВидНоменклатурыСсылка,
|		                  	РеализацияТоваровУслугТовары.Номенклатура.ВидНоменклатуры.Наименование КАК НоменклатураВидНоменклатурыНаименование,
|		                  	РеализацияТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения.Код КАК НоменклатураЕдиницаИзмеренияКод,
|		                  	РеализацияТоваровУслугТовары.Номенклатура.Наименование КАК НоменклатураНаименование,
|		                  	РеализацияТоваровУслугТовары.Номенклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное,
|		                  	РеализацияТоваровУслугТовары.Номенклатура.Услуга КАК НоменклатураУслуга,
|		                  	РеализацияТоваровУслугТовары.Номенклатура.Код КАК НоменклатураКод,
|		                  	РеализацияТоваровУслугТовары.Номенклатура.КодТНВЭД.Код КАК НоменклатураКодТНВЭДКод,
|		                  	РеализацияТоваровУслугТовары.Номенклатура.КодОКВЭД2.Код КАК НоменклатураКодОКВЭД2Код,
|		                  	РеализацияТоваровУслугТовары.Номенклатура.КодОКВЭД.Код КАК НоменклатураКодОКВЭДКод,
|		                  	РеализацияТоваровУслугТовары.Номенклатура.КодОКП.Код КАК НоменклатураКодОКПКод,
|		                  	РеализацияТоваровУслугТовары.Номенклатура.КодОКПД2.Код КАК НоменклатураКодОКПД2Код,
|		                  	РеализацияТоваровУслугТовары.Номенклатура.ВидСтавкиНДС КАК НоменклатураВидСтавкиНДС,
|		                  	РеализацияТоваровУслугТовары.Номенклатура.КодНоменклатурнойКлассификацииККТ.Код КАК НоменклатураКодНоменклатурнойКлассификацииККТКод,
|		                  	РеализацияТоваровУслугТовары.Номенклатура.Описание КАК НоменклатураОписание,
|		                  	РеализацияТоваровУслугТовары.Номенклатура.ПрослеживаемыйТовар КАК НоменклатураПрослеживаемыйТовар,
|		                  	РеализацияТоваровУслугТовары.Номенклатура.НоменклатурнаяГруппа.Наименование КАК НоменклатураНоменклатурнаяГруппаНаименование,
|		                  	РеализацияТоваровУслугТовары.Номенклатура.СтранаПроисхождения.КодАльфа3 КАК НоменклатураСтранаПроисхожденияКодАльфа3,
|		                  	РеализацияТоваровУслугТовары.Номенклатура.СтранаПроисхождения.Код КАК НоменклатураСтранаПроисхожденияКод,
|		                  	РеализацияТоваровУслугТовары.НомерГТД.РегистрационныйНомер КАК ТоварыНомерГТДРегистрационныйНомер,
|		                  	РеализацияТоваровУслугТовары.НомерГТД.СтранаВвозаНеРФ КАК ТоварыНомерГТДСтранаВвозаНеРФ,
|		                  	РеализацияТоваровУслугТовары.НомерГТД.ЭтоРНПТ КАК ТоварыНомерГТДЭтоРНПТ,
|		                  	РеализацияТоваровУслугТовары.НомерГТД.ЭтоНомерТД КАК ТоварыНомерГТДЭтоНомерТД,
|		                  	РеализацияТоваровУслугТовары.ПрослеживаемыйТовар КАК ТоварыПрослеживаемыйТовар,
|		                  	РеализацияТоваровУслугТовары.СтавкаНДС КАК ТоварыСтавкаНДС,
|		                  	РеализацияТоваровУслугТовары.СтранаПроисхождения.КодАльфа3 КАК ТоварыСтранаПроисхожденияКодАльфа3,
|		                  	РеализацияТоваровУслугТовары.СтранаПроисхождения.Код КАК ТоварыСтранаПроисхожденияКод,
|		                  	РеализацияТоваровУслугТовары.Количество КАК ТоварыКоличество,
|		                  	РеализацияТоваровУслугТовары.Сумма КАК ТоварыСумма,
|		                  	РеализацияТоваровУслугТовары.СуммаНДС КАК ТоварыСуммаНДС,
|		                  	РеализацияТоваровУслугТовары.Цена КАК ТоварыЦена,
|		                  	РеализацияТоваровУслугТовары.НомерСтроки КАК ТоварыНомерСтроки,
|		                  	РеализацияТоваровУслугСведенияПрослеживаемости.НомерСтроки КАК ПрослеживаемостьНомерСтроки,
|		                  	РеализацияТоваровУслугСведенияПрослеживаемости.Количество КАК ПрослеживаемостьКоличество,
|		                  	РеализацияТоваровУслугСведенияПрослеживаемости.КоличествоПрослеживаемости КАК ПрослеживаемостьКоличествоПрослеживаемости,
|		                  	РеализацияТоваровУслугТовары.Номенклатура.КодРаздел7ДекларацииНДС.Код КАК НоменклатураКодРаздел7ДекларацииНДСКод,
|		                  	РеализацияТоваровУслугТовары.СчетУчета.Код КАК ТоварыСчетУчета,
|		                  	РеализацияТоваровУслугТовары.Ссылка.СчетУчетаРасчетовСКонтрагентом.Код КАК СчетУчетаРасчетовСКонтрагентом,
|		                  	РеализацияТоваровУслугТовары.Ссылка.СчетУчетаРасчетовПоАвансам.Код КАК СчетУчетаРасчетовПоАвансам,
|		                  	РеализацияТоваровУслугТовары.Ссылка.Проведен КАК ДокументПроведен
|		                  ИЗ
|		                  	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
|		                  		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.СведенияПрослеживаемости КАК РеализацияТоваровУслугСведенияПрослеживаемости
|		                  		ПО РеализацияТоваровУслугТовары.Ссылка = РеализацияТоваровУслугСведенияПрослеживаемости.Ссылка
|		                  			И РеализацияТоваровУслугТовары.ИдентификаторСтроки = РеализацияТоваровУслугСведенияПрослеживаемости.ИдентификаторСтроки
|		                  ГДЕ
|		                  	 РеализацияТоваровУслугТовары.Ссылка.Дата > &Дата
|		                  	И РеализацияТоваровУслугТовары.Ссылка В
|		                  			(ВЫБРАТЬ
|		                  				РеализацияТоваровУслугИзменения.Ссылка КАК Ссылка
|		                  			ИЗ
|		                  				Документ.РеализацияТоваровУслуг.Изменения КАК РеализацияТоваровУслугИзменения
|		                  			ГДЕ
|		                  				РеализацияТоваровУслугИзменения.Узел.Код = &КодУзла)";

Результат = Запрос.Выполнить();
result = ЗначениеВСтрокуВнутр(Новый Структура("ТЗ",Результат.Выгрузить()));',
     'Комментарий': ''
    },
    {
     'Имя': 'КодУдаленияРегистрацииОбъектов',
     'Разделитель': null,
     'ЗначениеСтрока': 'Для Каждого Стр из params Цикл 
Реализация = Документы.РеализацияТоваровУслуг.ПолучитьСсылку(Новый УникальныйИдентификатор(Стр)); 
ПланыОбмена.УдалитьРегистрациюИзменений(УМ_ДинамическиеКонстантыПовтИсп.ПолучитьЗначениеДинамическойКонстанты("Глн_УзелОбменаУХ"),Реализация);
КонецЦикла;
',
     'Комментарий': ''
    }
   ]
  }
 ]
}
