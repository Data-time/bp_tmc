{
 'Реквизиты': {
  'Наименование': 'Создать новых элементов в ДО (временное решение)',
  'ТекстОбработки': 'ПравилоКонтрагент_УИД = ПолучитьЗначениеПеременной(Переменные,"ПравилоКонтрагент_УИД");
ПравилоКонтрагент = Справочники.ПравилаИнтеграцииС1СДокументооборотом3.ПолучитьСсылку(Новый УникальныйИдентификатор(ПравилоКонтрагент_УИД));

ПравилоСтатья_УИД = ПолучитьЗначениеПеременной(Переменные,"ПравилоСтатья_УИД");
ПравилоСтатья = Справочники.ПравилаИнтеграцииС1СДокументооборотом3.ПолучитьСсылку(Новый УникальныйИдентификатор(ПравилоСтатья_УИД));

УстановитьПривилегированныйРежим(Истина);
ИмяПользователя = Константы.ИнтеграцияС1СДокументооборотИмяПользователяДляОбмена.Получить();
Пароль = Константы.ИнтеграцияС1СДокументооборотПарольДляОбмена.Получить();
Если Не ЗначениеЗаполнено(ИмяПользователя) Тогда // прочтем настройки из пользовательского хранилища.
	
	ПарольСохранен = Ложь;
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьВызовСервера.ПрочитатьНастройкиАвторизацииИзХранилищаОбщихНастроек(
		ИмяПользователя, Пароль, ПарольСохранен);
	
	Если Не ЗначениеЗаполнено(ИмяПользователя) Тогда
		
		ЗаписьЖурналаРегистрации(
			ИнтеграцияС1СДокументооборотБазоваяФункциональность.ИмяСобытияЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,,,
			НСтр("ru = \u0027Для пользователя регламентного задания обмена не указано имя пользователя 1С:Документооборота\u0027",
				ОбщегоНазначения.КодОсновногоЯзыка()));
		
	КонецЕсли;
	
	Если ПарольСохранен <> Истина Тогда
		
		ЗаписьЖурналаРегистрации(
			ИнтеграцияС1СДокументооборотБазоваяФункциональность.ИмяСобытияЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,,,
			НСтр("ru = \u0027Для пользователя регламентного задания обмена не сохранен пароль 1С:Документооборота\u0027",
				ОбщегоНазначения.КодОсновногоЯзыка()));
		
	КонецЕсли;
	
	// Перенесем настройки в константы.
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьВызовСервера.СохранитьНастройкиАвторизацииДляОбмена(ИмяПользователя, Пароль);
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьВызовСервера.УдалитьНастройкиАвторизацииИзХранилищаОбщихНастроек();
	
КонецЕсли;
       
ПараметрыСеанса.ИнтеграцияС1СДокументооборотПарольИзвестен = ЗначениеЗаполнено(Пароль);
ИнтеграцияС1СДокументооборотБазоваяФункциональностьВызовСервера.УстановитьНастройкиАвторизацииВПараметрыСеанса(
	ИмяПользователя,
	Пароль,
	Ложь);

Если ЗначениеЗаполнено(ПравилоКонтрагент) Тогда

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Ссылка,
		|	ОбъектыИнтегрированныеС1СДокументооборотом.Объект КАК Объект
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыИнтегрированныеС1СДокументооборотом КАК ОбъектыИнтегрированныеС1СДокументооборотом
		|		ПО (Контрагенты.Ссылка = (ВЫРАЗИТЬ(ОбъектыИнтегрированныеС1СДокументооборотом.Объект КАК Справочник.Контрагенты)))
		|ГДЕ
		|	НЕ Контрагенты.ПометкаУдаления
		|	И НЕ Контрагенты.ЭтоГруппа
		|	И ОбъектыИнтегрированныеС1СДокументооборотом.Объект ЕСТЬ NULL";
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ОбъектДОИлиСообщение = ИнтеграцияС1СДокументооборотБазоваяФункциональностьВызовСервера.СоздатьОбъектДОПоПравилу(ВыборкаДетальныеЗаписи.Ссылка, ПравилоКонтрагент);
		Если ТипЗнч(ОбъектДОИлиСообщение) = Тип("Строка") Тогда // сообщение об ошибке
		Иначе // структура с описанием созданного объекта результата
			ИнтеграцияС1СДокументооборотБазоваяФункциональностьВызовСервера.ДобавитьСвязь(
																	ОбъектДОИлиСообщение.ID,
																	ОбъектДОИлиСообщение.type,
																	ВыборкаДетальныеЗаписи.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
Иначе
	СтрокаОшибок = СтрокаОшибок + "Не найдено правило для выгрузки контрагентов." + Символы.ПС;
КонецЕсли;


Если ЗначениеЗаполнено(ПравилоСтатья) Тогда
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатьиДвиженияДенежныхСредств.Ссылка КАК Ссылка,
		|	ОбъектыИнтегрированныеС1СДокументооборотом.Объект КАК Объект
		|ИЗ
		|	Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДвиженияДенежныхСредств
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыИнтегрированныеС1СДокументооборотом КАК ОбъектыИнтегрированныеС1СДокументооборотом
		|		ПО (СтатьиДвиженияДенежныхСредств.Ссылка = (ВЫРАЗИТЬ(ОбъектыИнтегрированныеС1СДокументооборотом.Объект КАК Справочник.СтатьиДвиженияДенежныхСредств)))
		|ГДЕ
		|	НЕ СтатьиДвиженияДенежныхСредств.ПометкаУдаления
		|	И НЕ СтатьиДвиженияДенежныхСредств.ЭтоГруппа
		|	И НЕ СтатьиДвиженияДенежныхСредств.DT_Архивная
		|	И ОбъектыИнтегрированныеС1СДокументооборотом.Объект ЕСТЬ NULL";
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ОбъектДОИлиСообщение = ИнтеграцияС1СДокументооборотБазоваяФункциональностьВызовСервера.СоздатьОбъектДОПоПравилу(ВыборкаДетальныеЗаписи.Ссылка, ПравилоСтатья);
		Если ТипЗнч(ОбъектДОИлиСообщение) = Тип("Строка") Тогда // сообщение об ошибке
		Иначе // структура с описанием созданного объекта результата
			ИнтеграцияС1СДокументооборотБазоваяФункциональностьВызовСервера.ДобавитьСвязь(
																	ОбъектДОИлиСообщение.ID,
																	ОбъектДОИлиСообщение.type,
																	ВыборкаДетальныеЗаписи.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
Иначе
	СтрокаОшибок = СтрокаОшибок + "Не найдено правило для выгрузки статей." + Символы.ПС;	
КонецЕсли;',
  'Комментарий': ''
 },
 'ТЧ': [
  {
   'Переменные': [
    {
     'Имя': 'ПравилоКонтрагент_УИД',
     'Разделитель': null,
     'ЗначениеСтрока': '',
     'Комментарий': ''
    },
    {
     'Имя': 'ПравилоСтатья_УИД',
     'Разделитель': null,
     'ЗначениеСтрока': '',
     'Комментарий': ''
    }
   ]
  }
 ]
}
